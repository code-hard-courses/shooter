!function o(u,a,s){function c(t,e){if(!a[t]){if(!u[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(f)return f(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var i=a[t]={exports:{}};u[t][0].call(i.exports,function(e){return c(u[t][1][e]||e)},i,i.exports,o,u,a,s)}return a[t].exports}for(var f="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.RandomBuff=function(e,t,n,r,i){var o=u[~~(3*Math.random())];return new o.constructor(e,t,n,r,i,o.selector)};var r=e("./sword"),i=e("./shield"),o=e("./shoes"),u=[{selector:".sword",constructor:r.Sword},{selector:".shield",constructor:i.Shield},{selector:".shoes",constructor:o.Shoes}]},{"./shield":3,"./shoes":4,"./sword":5}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();n.BuffItem=function(){function u(e,t,n,r,i,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),this.ctx=e,this.width=t,this.height=n,this.x=r,this.y=i,this.sprite={x:0,y:0,width:16,height:16},this.image=document.querySelector(o)}return r(u,[{key:"draw",value:function(e){var t=this.image,n=this.sprite,r=this.x,i=this.y,o=this.width,u=this.height;return e.drawImage(t,n.x,n.y,n.width,n.height,r,i,o,u),this}}]),u}()},{}],3:[function(e,t,n){"use strict";var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.Shield=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./buff-item");n.Shield=function(e){function u(e,t,n,r,i,o){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":a(t))&&"function"!=typeof t?e:t}(this,(u.__proto__||Object.getPrototypeOf(u)).call(this,e,t,n,r,i,o))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":a(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(u,i.BuffItem),r(u,[{key:"activateBuff",value:function(e,t){e.hero.isImmortal=!0,setTimeout(function(){return e.hero.isImmortal=!1},t)}}]),u}()},{"./buff-item":2}],4:[function(e,t,n){"use strict";var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.Shoes=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./buff-item");function o(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}n.Shoes=function(e){function u(e,t,n,r,i,o){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":a(t))&&"function"!=typeof t?e:t}(this,(u.__proto__||Object.getPrototypeOf(u)).call(this,e,t,n,r,i,o))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":a(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(u,i.BuffItem),r(u,[{key:"activateBuff",value:function(e,t){e.hero.speed*=2;var n=[].concat(o(e.smartEnemies),o(e.dummyEnemies));n.forEach(function(e){return e.speed/=2}),setTimeout(function(){e.hero.speed/=2,n.forEach(function(e){return e.speed*=2})},t)}}]),u}()},{"./buff-item":2}],5:[function(e,t,n){"use strict";var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.Sword=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./buff-item"),o=e("../creatures/bullet");n.Sword=function(e){function u(e,t,n,r,i,o){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":a(t))&&"function"!=typeof t?e:t}(this,(u.__proto__||Object.getPrototypeOf(u)).call(this,e,t,n,r,i,o))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":a(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(u,i.BuffItem),r(u,[{key:"activateBuff",value:function(e,t){(0,o.growBullet)(),setTimeout(function(){return(0,o.shrinkBullet)()},t)}}]),u}()},{"../creatures/bullet":7,"./buff-item":2}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.addHeroControls=function(e,t){i=e,o=i.dir,u=void 0,document.addEventListener("keydown",function(e){var t,n,r;switch(t=u,n=e.keyCode,r=i,u=t!==n?(r.makeHeroSpeedParamsDefault(),r.setNewSpeedTimer(),n):t,e.keyCode){case 38:i.updateSpriteDirection("top"),o.y=-1,o.x=0;break;case 39:i.updateSpriteDirection("right"),o.y=0,o.x=1;break;case 40:i.updateSpriteDirection("bottom"),o.y=1,o.x=0;break;case 37:i.updateSpriteDirection("left"),o.x=-1,o.y=0;break;case 17:o.x=0,o.y=0}}),n=t,r.addEventListener("mousedown",function(e){n(e.offsetX,e.offsetY)});var n;var i,o,u},n.moveToAnotherSideIfGoBeyonceCanvas=function(e,t){var n=e.canvas.clientWidth,r=e.canvas.clientHeight;t.x>n?t.x=0:t.x<0&&(t.x=n);t.y>r?t.y=0:t.y<0&&(t.y=r)};var r=document.querySelector("canvas")},{}],7:[function(e,t,n){"use strict";var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.Bullet=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();n.growBullet=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:2;h*=e},n.shrinkBullet=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:2;h/=e};var i=e("./unit");var h=6;n.Bullet=function(e){function f(e,t,n,r,i){var o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:h,u=6<arguments.length&&void 0!==arguments[6]?arguments[6]:h,a=7<arguments.length&&void 0!==arguments[7]?arguments[7]:10,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"black";!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f);var c=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":l(t))&&"function"!=typeof t?e:t}(this,(f.__proto__||Object.getPrototypeOf(f)).call(this,e,o,u,t-h/2,n-h/2,r,i,a));return c.color=s,c}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":l(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(f,i.Unit),r(f,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,this}},{key:"update",value:function(e){return e.beginPath(),e.fillStyle=this.color,e.arc(this.x,this.y,h,0,2*Math.PI,!0),e.fill(),this}}]),f}()},{"./unit":11}],8:[function(e,t,n){"use strict";var f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.DummyEnemy=n.BASE_DUMMY_SIZE=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./unit");n.BASE_DUMMY_SIZE=25;var u=document.querySelector(".dummy-enemy-sprite"),o=3,a=1,s=0,l=2;n.DummyEnemy=function(e){function c(e,t,n,r,i,o,u){var a=7<arguments.length&&void 0!==arguments[7]?arguments[7]:2;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":f(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,n,r,i,o,u,a));return s.sprite={baseX:0,baseY:0,x:0,y:16*s.getSpriteLayerValue(s.dir.x,s.dir.y),width:16,height:16,deltaX:16,deltaY:16},setInterval(function(){s.sprite.x<16?s.sprite.x+=s.sprite.deltaX:s.sprite.x=s.sprite.baseX},200),s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":f(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,i.Unit),r(c,[{key:"update",value:function(e){var t=this.sprite,n=this.x,r=this.y,i=this.width,o=this.height;return e.drawImage(u,t.x,t.y,t.width,t.height,n,r,i,o),this}},{key:"getSpriteLayerValue",value:function(e,t){return Math.abs(e)>Math.abs(t)?0<e?s:a:0<t?l:o}}]),c}()},{"./unit":11}],9:[function(e,t,n){"use strict";var f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.Hero=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./unit");var o={top:2,left:3,right:0,bottom:1},u=document.querySelector(".hero-sprite"),a=document.querySelector(".speed");n.Hero=function(e){function c(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:30,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:50,r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:50,i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:50,o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0,u=6<arguments.length&&void 0!==arguments[6]?arguments[6]:0,a=7<arguments.length&&void 0!==arguments[7]?arguments[7]:1;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":f(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,n,r,i,o,u,a));return s.gunDir={x:1,y:0},s.isImmortal=!1,s.accelerationStartTime=0,s.currentAccelerationTimer="",s.sprite={baseX:9,baseY:2,x:9,y:2,width:16,height:26,deltaX:32,deltaY:32},setInterval(function(){s.sprite.y<96?s.sprite.y+=s.sprite.deltaY:s.sprite.y=s.sprite.baseY},200),s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":f(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,i.Unit),r(c,[{key:"update",value:function(e){a.innerHTML=~~(100*this.speed)/100;var t=this.sprite,n=this.x,r=this.y,i=this.width,o=this.height;return e.drawImage(u,t.x,t.y,t.width,t.height,n,r,i,o),this}},{key:"updateSpriteDirection",value:function(e){this.sprite.x=this.sprite.baseX+o[e]*this.sprite.deltaX}},{key:"makeHeroSpeedParamsDefault",value:function(){this.currentAccelerationTimer&&clearInterval(this.currentAccelerationTimer),this.speed=1,this.accelerationStartTime=0}},{key:"setNewSpeedTimer",value:function(){var e=this,t=this.speed;this.accelerationStartTime=0,this.currentAccelerationTimer=setInterval(function(){e.accelerationStartTime+=50,e.speed=t+5e-4*e.accelerationStartTime,3e3<=e.accelerationStartTime&&clearInterval(e.currentAccelerationTimer)},50)}}]),c}()},{"./unit":11}],10:[function(e,t,n){"use strict";var f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0}),n.SmartEnemy=n.BASE_SMART_SIZE=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./unit"),s=e("../utils");n.BASE_SMART_SIZE=16;var u=document.querySelector(".smart-enemy-sprite"),o=10,l=5,h="13px Arial";n.SmartEnemy=function(e){function c(e,t,n,r,i,o,u){var a=7<arguments.length&&void 0!==arguments[7]?arguments[7]:.6;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":f(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,n,r,i,o,u,a));return s.sprite={baseX:0,baseY:0,x:0,y:0,width:16,height:16,deltaX:16,deltaY:16},setInterval(function(){s.sprite.x<48?s.sprite.x+=s.sprite.deltaX:s.sprite.x=s.sprite.baseX},200),s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":f(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,i.Unit),r(c,[{key:"newPos",value:function(e){return this.updateDirection(e),function e(t,n,r){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,n);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,r)}if("value"in i)return i.value;var u=i.get;return void 0!==u?u.call(r):void 0}(c.prototype.__proto__||Object.getPrototypeOf(c.prototype),"newPos",this).call(this),this}},{key:"update",value:function(e){var t=this.sprite,n=this.x,r=this.y,i=this.width,o=this.height;return e.drawImage(u,t.x,t.y,t.width,t.height,n,r,i,o),this}},{key:"showWarningMessage",value:function(e){this.ctx.font=h,this.ctx.strokeText(e,this.x+o,this.y-l)}},{key:"updateDirection",value:function(e){var t=this.getFearParams(e.isImmortal);if(!(0,s.isDistanceBetweenUnitsMoreThanSafe)(e,this,t.distance)){var n=(0,s.getCenterCoordinates)(e),r=a(n,2),i=r[0],o=r[1],u=Math.atan2(i-this.x-this.width/2,o-this.y-this.height/2)+Math.PI;this.dir.y=t.coefficient*Math.cos(u),this.dir.x=t.coefficient*Math.sin(u),this.showWarningMessage(t.message)}}},{key:"getFearParams",value:function(e){return e?{distance:300,coefficient:1,message:"You don't catch me!"}:{distance:200,coefficient:-1,message:"I see you"}}}]),c}()},{"../utils":14,"./unit":11}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Unit=void 0;var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("../controls");n.Unit=function(){function s(e,t,n,r,i,o,u,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),this.ctx=e,this.width=t,this.height=n,this.speed=a,this.x=r,this.y=i,this.dir={x:o,y:u}}return r(s,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,(0,i.moveToAnotherSideIfGoBeyonceCanvas)(this.ctx,this),this}}]),s}()},{"../controls":6}],12:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Game=void 0;var s=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./creatures/hero"),o=e("./creatures/dummyEnemy"),u=e("./creatures/smartEnemy"),a=e("./controls"),c=e("./utils"),f=e("./creatures/bullet"),l=(e("./buffs/buff-item"),e("./buffs/buff-generator"));function h(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var y=document.querySelector(".score");n.Game=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.startTime=Date.now(),this.currentTime=Date.now(),this.canvas.width=700,this.canvas.height=700,this.ctx=this.canvas.getContext("2d"),this.hero=new i.Hero(this.ctx),this.dummyEnemies=[],this.smartEnemies=[],this.heroBullets=[],this.timers=[],this.buffItem=""}return r(t,[{key:"start",value:function(){var n=this,e=setInterval(function(){return n.updateGame()},10),t=setInterval(function(){return n.addEnemy(n.dummyEnemies,o.DummyEnemy,o.BASE_DUMMY_SIZE)},4e3),r=setInterval(function(){return n.addEnemy(n.smartEnemies,u.SmartEnemy,u.BASE_SMART_SIZE)},2e3),i=setInterval(function(){return n.addBuffItem()},12e3);this.timers.push(e,t,r,i),(0,a.addHeroControls)(this.hero,function(e,t){return n.addBullet(e,t)})}},{key:"updateGame",value:function(){this.updateScore(),this.updateCanvasState()}},{key:"updateScore",value:function(){this.currentTime=this.currentTime+10;var e=(this.currentTime-this.startTime)/1e3;y.innerHTML=e}},{key:"updateCanvasState",value:function(){this.ctx.clearRect(0,0,this.ctx.canvas.clientWidth,this.ctx.canvas.clientHeight),this.buffItem&&this.buffItem.draw(this.ctx),this.handleHeroPosition(),this.handleDummyEnemiesPosition(),this.handleSmartEnemiesPosition(),this.handleHeroBulletsPosition(),this.handleEnemiesDeath(),this.handleHeroDeath(),this.handleBuffs()}},{key:"handleHeroPosition",value:function(){this.hero.newPos().update(this.ctx)}},{key:"handleDummyEnemiesPosition",value:function(){var t=this;this.dummyEnemies.forEach(function(e){return e.newPos().update(t.ctx)})}},{key:"handleSmartEnemiesPosition",value:function(){var r=this;this.smartEnemies=this.smartEnemies.reduce(function(e,t){if(e.some(function(e){return(0,c.ifUnitsTouchEachOther)(e,t)}))return e;var n=r.smartEnemies.find(function(e){return(0,c.ifUnitsTouchEachOther)(e,t)&&e!==t});return n&&(t=(0,c.mergeUnits)(t,n)),e.push(t),e},[]),this.smartEnemies.forEach(function(e){return e.newPos(r.hero).update(r.ctx)})}},{key:"handleHeroBulletsPosition",value:function(){var t=this,n=this.ctx.canvas.clientWidth,r=this.ctx.canvas.clientHeight,i=void 0;this.heroBullets=this.heroBullets.filter(function(e){return(i=e.x<n&&0<e.x&&e.y<r&&0<e.y)&&e.newPos().update(t.ctx),i})}},{key:"handleEnemiesDeath",value:function(){var n=this,e=[],r=[],i=[],o=[].concat(h(this.smartEnemies),h(this.dummyEnemies));this.smartEnemies.forEach(function(t){n.heroBullets.some(function(e){return n.shouldEnemyDieIfBulletHitsHim(t,e)})||e.push(t)}),this.dummyEnemies.forEach(function(t){n.heroBullets.some(function(e){return n.shouldEnemyDieIfBulletHitsHim(t,e)})||r.push(t)}),this.heroBullets.forEach(function(t){o.some(function(e){return n.shouldEnemyDieIfBulletHitsHim(e,t)})||i.push(t)}),this.smartEnemies=e,this.dummyEnemies=r,this.heroBullets=i}},{key:"handleHeroDeath",value:function(){var t=this;if(!this.hero.isImmortal){[].concat(h(this.dummyEnemies),h(this.smartEnemies)).some(function(e){return(0,c.ifUnitsTouchEachOther)(t.hero,e,5)})&&setTimeout(function(){t.timers.map(function(e){return clearInterval(e)}),alert("You lose")},5)}}},{key:"handleBuffs",value:function(){if((0,c.ifUnitsTouchEachOther)(this.hero,this.buffItem)){this.buffItem.activateBuff(this,2e4),this.buffItem=""}}},{key:"shouldEnemyDieIfBulletHitsHim",value:function(e,t){var n=(0,c.ifUnitsTouchEachOther)(e,t);return n&&(e=this.damageUnit(e)),!(!n||!(e.width<25||e.height<25))}},{key:"damageUnit",value:function(e){var t=e.width*e.height,n=(t-16)/t;return e.width*=n,e.height*=n,e}},{key:"addEnemy",value:function(e,t,n){var r=this.generateRandomPositionAndDirection(this.hero,n),i=r.size,o=r.x,u=r.y,a=r.alfaX,s=r.alfaY,c=new t(this.ctx,i,i,o,u,a,s);e.push(c)}},{key:"addBullet",value:function(e,t){var n=(0,c.getCenterCoordinates)(this.hero),r=s(n,2),i=r[0],o=r[1],u=Math.atan2(i-e,o-t)+Math.PI,a=new f.Bullet(this.ctx,i,o,Math.sin(u),Math.cos(u));this.heroBullets.push(a)}},{key:"addBuffItem",value:function(){var e=this.generateRandomPositionAndDirection(this.hero,0),t=e.x,n=e.y,r=new l.RandomBuff(this.ctx,20,20,t,n);this.buffItem=r}},{key:"generateRandomPositionAndDirection",value:function(e,t){for(var n=void 0,r=void 0,i=20*Math.random()+t;n=Math.random()*this.ctx.canvas.clientWidth,r=Math.random()*this.ctx.canvas.clientHeight,!(0,c.isDistanceBetweenUnitsMoreThanSafe)(e,{x:n,y:r,width:i,height:i}););return{x:n,y:r,alfaX:2*Math.random()-1,alfaY:2*Math.random()-1,size:i}}}]),t}()},{"./buffs/buff-generator":1,"./buffs/buff-item":2,"./controls":6,"./creatures/bullet":7,"./creatures/dummyEnemy":8,"./creatures/hero":9,"./creatures/smartEnemy":10,"./utils":14}],13:[function(e,t,n){"use strict";var r,i=e("./game-arena");r=document.querySelector("canvas"),new i.Game(r).start()},{"./game-arena":12}],14:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var l=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{!r&&a.return&&a.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function h(e){return[e.x+.5*e.width,e.y+.5*e.height]}function r(e,t){var n=h(e),r=l(n,2),i=r[0],o=r[1],u=h(t),a=l(u,2),s=a[0],c=a[1];return Math.pow(Math.pow(i-s,2)+Math.pow(o-c,2),.5)}n.getCenterCoordinates=h,n.getDistanceBetweenUnits=r,n.ifUnitsTouchEachOther=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,r=h(e),i=l(r,2),o=i[0],u=i[1],a=h(t),s=l(a,2),c=s[0],f=s[1];return Math.abs(c-o)<(e.width+t.width-y-n)/2&&Math.abs(f-u)<(e.height+t.height-y-n)/2},n.isDistanceBetweenUnitsMoreThanSafe=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:i;return r(e,t)>n},n.mergeUnits=function(e,t){var n=e.width*e.height,r=t.width*t.height,i=Math.pow((n+r)/n,.5);return e.width*=i,e.height*=i,e};var y=2;var i=200},{}]},{},[13]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
