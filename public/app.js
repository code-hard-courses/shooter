!function i(a,u,s){function c(t,e){if(!u[t]){if(!a[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(l)return l(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var o=u[t]={exports:{}};a[t][0].call(o.exports,function(e){return c(a[t][1][e]||e)},o,o.exports,i,a,u,s)}return u[t].exports}for(var l="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.addHeroControls=function(e,t){var r=e.dir,n=e.gunDir;document.addEventListener("keydown",function(e){switch(e.keyCode){case 38:r.y=n.y=-1,r.x=n.x=0;break;case 39:r.y=n.y=0,r.x=n.x=1;break;case 40:r.y=n.y=1,r.x=n.x=0;break;case 37:r.x=n.x=-1,r.y=n.y=0;break;case 17:r.x=0,r.y=0;break;case 32:t()}})},r.removeHeroControls=function(){},r.moveToAnotherSideIfGoBeyonceCanvas=function(e,t){var r=e.canvas.clientWidth,n=e.canvas.clientHeight;t.x>r?t.x=0:t.x<0&&(t.x=r);t.y>n?t.y=0:t.y<0&&(t.y=n)}},{}],2:[function(e,t,r){"use strict";var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.Bullet=void 0;var n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),o=e("./creature");r.Bullet=function(e){function c(e,t,r,n,o){var i=5<arguments.length&&void 0!==arguments[5]?arguments[5]:16,a=6<arguments.length&&void 0!==arguments[6]?arguments[6]:16,u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:10,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"orange";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":l(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,i,a,s,t-8,r-8,n,o,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":l(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,o.Creature),n(c,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,this}}]),c}()},{"./creature":3}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Creature=void 0;var n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),o=e("../controls");r.Creature=function(){function c(e,t,r,n,o,i,a,u,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),this.ctx=e,this.width=t,this.height=r,this.color=n,this.speed=s,this.x=o,this.y=i,this.dir={x:a,y:u}}return n(c,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,(0,o.moveToAnotherSideIfGoBeyonceCanvas)(this.ctx,this),this}},{key:"update",value:function(e){return e.fillStyle=this.color,e.fillRect(this.x,this.y,this.width,this.height),this}}]),c}()},{"../controls":1}],4:[function(e,t,r){"use strict";var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.DummyEnemy=r.BASE_DUMMY_SIZE=void 0;var n=e("./creature");r.BASE_DUMMY_SIZE=18,r.DummyEnemy=function(e){function c(e,t,r,n,o,i,a){var u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:2,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"red";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":l(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,r,s,n,o,i,a,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":l(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,n.Creature),c}()},{"./creature":3}],5:[function(e,t,r){"use strict";var h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.Hero=void 0;var n=e("./creature");r.Hero=function(e){function l(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:20,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:20,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"green",o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:50,i=5<arguments.length&&void 0!==arguments[5]?arguments[5]:50,a=6<arguments.length&&void 0!==arguments[6]?arguments[6]:0,u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:0,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:3;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l);var c=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":h(t))&&"function"!=typeof t?e:t}(this,(l.__proto__||Object.getPrototypeOf(l)).call(this,e,t,r,n,o,i,a,u,s));return c.gunDir={x:1,y:0},c}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":h(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(l,n.Creature),l}()},{"./creature":3}],6:[function(e,t,r){"use strict";var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.SmartEnemy=r.BASE_SMART_SIZE=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),o=e("./creature"),u=e("../utils");r.BASE_SMART_SIZE=16,r.SmartEnemy=function(e){function c(e,t,r,n,o,i,a){var u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:.1,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"blue";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":l(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,r,s,n,o,i,a,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":l(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,o.Creature),n(c,[{key:"newPos",value:function(e){return this.updateDirection(e),function e(t,r,n){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,r);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,r,n)}if("value"in o)return o.value;var a=o.get;return void 0!==a?a.call(n):void 0}(c.prototype.__proto__||Object.getPrototypeOf(c.prototype),"newPos",this).call(this),this}},{key:"showWarningMessage",value:function(e){this.ctx.font="13px Arial",this.ctx.strokeText(e||"I see you",this.x+10,this.y-5)}},{key:"updateDirection",value:function(e){if((0,u.isDistanceBetweenCreaturesLowThanSearchable)(e,this,200)){var t=(0,u.getCenterCoordinates)(e),r=a(t,2),n=r[0],o=r[1],i=Math.atan2(n-this.x,o-this.y)+Math.PI;this.dir.y=-Math.cos(i),this.dir.x=-Math.sin(i),this.showWarningMessage()}}}]),c}()},{"../utils":9,"./creature":3}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Game=void 0;var c=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),o=e("./creatures/hero"),i=e("./creatures/dummyEnemy"),a=e("./creatures/smartEnemy"),u=e("./controls"),l=e("./utils"),s=e("./creatures/bullet");function h(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}var f=document.querySelector(".score");r.Game=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.startTime=Date.now(),this.currentTime=Date.now(),this.canvas.width=700,this.canvas.height=700,this.ctx=this.canvas.getContext("2d"),this.hero=new o.Hero(this.ctx),this.dummyEnemies=[],this.smartEnemies=[],this.heroBullets=[],this.timers=[]}return n(t,[{key:"start",value:function(){var e=this,t=setInterval(function(){return e.initializeGame()},10),r=setInterval(function(){return e.addEnemy(e.dummyEnemies,i.DummyEnemy,i.BASE_DUMMY_SIZE)},4e3),n=setInterval(function(){return e.addEnemy(e.smartEnemies,a.SmartEnemy,a.BASE_SMART_SIZE)},6e3);this.timers.push(t,r,n),(0,u.addHeroControls)(this.hero,function(){return e.addBullet(e.heroBullets,s.Bullet)})}},{key:"initializeGame",value:function(){this.updateState(),this.updateScore()}},{key:"updateScore",value:function(){this.currentTime=this.currentTime+10;var e=(this.currentTime-this.startTime)/1e3;f.innerHTML=e}},{key:"updateState",value:function(){this.ctx.clearRect(0,0,this.ctx.canvas.clientWidth,this.ctx.canvas.clientHeight),this.hero.newPos().update(this.ctx),this.handleDummyEnemies(),this.handleSmartEnemies(),this.handleHeroBullets(),this.handleEnemiesDeath(),this.checkIfHeroDead()}},{key:"handleDummyEnemies",value:function(){var t=this;this.dummyEnemies.forEach(function(e){return e.newPos().update(t.ctx)})}},{key:"handleSmartEnemies",value:function(){var o=this;this.smartEnemies=this.smartEnemies.reduce(function(e,t,r,n){return t.newPos(o.hero).update(o.ctx),e.some(function(e){return(0,l.ifCreaturesTouchEachOther)(e,t)})||(n.some(function(e){return(0,l.ifCreaturesTouchEachOther)(e,t)&&e!==t})&&(t.width*=1.5,t.height*=1.5),e.push(t)),e},[])}},{key:"handleHeroBullets",value:function(){var t=this,r=this.ctx.canvas.clientWidth,n=this.ctx.canvas.clientHeight,o=void 0;this.heroBullets=this.heroBullets.filter(function(e){return(o=e.x<r&&0<e.x&&e.y<n&&0<e.y)&&e.newPos().update(t.ctx),o})}},{key:"checkIfHeroDead",value:function(){var t=this;[].concat(h(this.dummyEnemies),h(this.smartEnemies)).some(function(e){return(0,l.ifCreaturesTouchEachOther)(t.hero,e)})&&setTimeout(function(){t.timers.map(function(e){return clearInterval(e)}),alert("You lose")},5)}},{key:"handleEnemiesDeath",value:function(){var e=this,r=[],n=[],o=[],i=[].concat(h(this.smartEnemies),h(this.dummyEnemies));this.smartEnemies.forEach(function(t){e.heroBullets.some(function(e){return(0,l.ifCreaturesTouchEachOther)(t,e)})||r.push(t)}),this.dummyEnemies.forEach(function(t){e.heroBullets.some(function(e){return(0,l.ifCreaturesTouchEachOther)(t,e)})||n.push(t)}),this.heroBullets.forEach(function(t){i.some(function(e){return(0,l.ifCreaturesTouchEachOther)(e,t)})||o.push(t)}),this.smartEnemies=r,this.dummyEnemies=n,this.heroBullets=o}},{key:"addEnemy",value:function(e,t,r){var n=this.generateRandomPositionAndDirection(this.hero,r),o=n.size,i=n.x,a=n.y,u=n.alfaX,s=n.alfaY,c=new t(this.ctx,o,o,i,a,u,s);e.push(c)}},{key:"addBullet",value:function(e,t){var r=(0,l.getCenterCoordinates)(this.hero),n=c(r,2),o=n[0],i=n[1],a=this.hero,u=0===a.dir.x&&0===a.dir.y?a.gunDir:a.dir,s=new t(this.ctx,o,i,u.x,u.y);e.push(s),console.log(e)}},{key:"generateRandomPositionAndDirection",value:function(e,t){for(var r=void 0,n=void 0,o=10*Math.random()+t;r=Math.random()*this.ctx.canvas.clientWidth,n=Math.random()*this.ctx.canvas.clientHeight,(0,l.isDistanceBetweenCreaturesLowThanSearchable)(e,{x:r,y:n,width:o,height:o}););return{x:r,y:n,alfaX:2*Math.random()-1,alfaY:2*Math.random()-1,size:o}}}]),t}()},{"./controls":1,"./creatures/bullet":2,"./creatures/dummyEnemy":4,"./creatures/hero":5,"./creatures/smartEnemy":6,"./utils":9}],8:[function(e,t,r){"use strict";var n,o=e("./game-arena");n=document.querySelector("canvas"),new o.Game(n).start()},{"./game-arena":7}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var l=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function h(e){return[e.x+.5*e.width,e.y+.5*e.height]}function n(e,t){var r=h(e),n=l(r,2),o=n[0],i=n[1],a=h(t),u=l(a,2),s=u[0],c=u[1];return Math.pow(Math.pow(o-s,2)+Math.pow(i-c,2),.5)}r.getCenterCoordinates=h,r.getDistanceBetweenCreatures=n,r.ifCreaturesTouchEachOther=function(e,t){var r=h(e),n=l(r,2),o=n[0],i=n[1],a=h(t),u=l(a,2),s=u[0],c=u[1];return Math.abs(s-o)<(e.width+t.width-2)/2&&Math.abs(c-i)<(e.height+t.height-2)/2},r.isDistanceBetweenCreaturesLowThanSearchable=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:o;return n(e,t)<r};var o=200},{}]},{},[8]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
