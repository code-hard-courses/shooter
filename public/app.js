!function o(a,u,s){function c(t,e){if(!u[t]){if(!a[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(h)return h(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=u[t]={exports:{}};a[t][0].call(i.exports,function(e){return c(a[t][1][e]||e)},i,i.exports,o,a,u,s)}return u[t].exports}for(var h="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.addHeroControls=function(t,r){var n=t.dir,i=t.gunDir;document.addEventListener("keydown",function(e){switch(e.keyCode){case 38:t.updateSpriteDirection(2),n.y=i.y=-1,n.x=i.x=0;break;case 39:t.updateSpriteDirection(0),n.y=i.y=0,n.x=i.x=1;break;case 40:t.updateSpriteDirection(1),n.y=i.y=1,n.x=i.x=0;break;case 37:t.updateSpriteDirection(3),n.x=i.x=-1,n.y=i.y=0;break;case 17:n.x=0,n.y=0;break;case 32:r()}})},r.removeHeroControls=function(){},r.moveToAnotherSideIfGoBeyonceCanvas=function(e,t){var r=e.canvas.clientWidth,n=e.canvas.clientHeight;t.x>r?t.x=0:t.x<0&&(t.x=r);t.y>n?t.y=0:t.y<0&&(t.y=n)}},{}],2:[function(e,t,r){"use strict";var h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.Bullet=void 0;var n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),i=e("./creature");r.Bullet=function(e){function c(e,t,r,n,i){var o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:16,a=6<arguments.length&&void 0!==arguments[6]?arguments[6]:16,u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:10,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"orange";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":h(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,o,a,s,t-8,r-8,n,i,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":h(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,i.Creature),n(c,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,this}}]),c}()},{"./creature":3}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Creature=void 0;var n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),i=e("../controls");r.Creature=function(){function c(e,t,r,n,i,o,a,u,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),this.ctx=e,this.width=t,this.height=r,this.color=n,this.speed=s,this.x=i,this.y=o,this.dir={x:a,y:u}}return n(c,[{key:"newPos",value:function(){return this.x+=this.speed*this.dir.x,this.y+=this.speed*this.dir.y,(0,i.moveToAnotherSideIfGoBeyonceCanvas)(this.ctx,this),this}},{key:"update",value:function(e){return e.fillStyle=this.color,e.fillRect(this.x,this.y,this.width,this.height),this}}]),c}()},{"../controls":1}],4:[function(e,t,r){"use strict";var h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.DummyEnemy=r.BASE_DUMMY_SIZE=void 0;var n=e("./creature");r.BASE_DUMMY_SIZE=18,r.DummyEnemy=function(e){function c(e,t,r,n,i,o,a){var u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:2,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"red";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":h(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,r,s,n,i,o,a,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":h(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,n.Creature),c}()},{"./creature":3}],5:[function(e,t,r){"use strict";var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.Hero=void 0;var n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),i=e("./creature");var o=document.querySelector(".hero-sprite");r.Hero=function(e){function h(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:30,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:50,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"green",i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:50,o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:50,a=6<arguments.length&&void 0!==arguments[6]?arguments[6]:0,u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:0,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:1;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h);var c=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":l(t))&&"function"!=typeof t?e:t}(this,(h.__proto__||Object.getPrototypeOf(h)).call(this,e,t,r,n,i,o,a,u,s));return c.gunDir={x:1,y:0},c.sprite={baseX:9,baseY:2,x:9,y:2,width:16,height:26,deltaX:32,deltaY:32},setInterval(function(){c.sprite.y<96?c.sprite.y+=c.sprite.deltaY:c.sprite.y=c.sprite.baseY},200),c}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":l(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(h,i.Creature),n(h,[{key:"update",value:function(e){var t=this.sprite;return e.drawImage(o,t.x,t.y,t.width,t.height,this.x,this.y,this.width,this.height),this}},{key:"updateSpriteDirection",value:function(e){this.sprite.x=this.sprite.baseX+e*this.sprite.deltaX}}]),h}()},{"./creature":3}],6:[function(e,t,r){"use strict";var h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(r,"__esModule",{value:!0}),r.SmartEnemy=r.BASE_SMART_SIZE=void 0;var a=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw o}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),i=e("./creature"),u=e("../utils");r.BASE_SMART_SIZE=16,r.SmartEnemy=function(e){function c(e,t,r,n,i,o,a){var u=7<arguments.length&&void 0!==arguments[7]?arguments[7]:.1,s=8<arguments.length&&void 0!==arguments[8]?arguments[8]:"blue";return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":h(t))&&"function"!=typeof t?e:t}(this,(c.__proto__||Object.getPrototypeOf(c)).call(this,e,t,r,s,n,i,o,a,u))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":h(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,i.Creature),n(c,[{key:"newPos",value:function(e){return this.updateDirection(e),function e(t,r,n){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,r);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,r,n)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(n):void 0}(c.prototype.__proto__||Object.getPrototypeOf(c.prototype),"newPos",this).call(this),this}},{key:"showWarningMessage",value:function(e){this.ctx.font="13px Arial",this.ctx.strokeText(e||"I see you",this.x+10,this.y-5)}},{key:"updateDirection",value:function(e){if((0,u.isDistanceBetweenCreaturesLowThanSearchable)(e,this,200)){var t=(0,u.getCenterCoordinates)(e),r=a(t,2),n=r[0],i=r[1],o=Math.atan2(n-this.x,i-this.y)+Math.PI;this.dir.y=-Math.cos(o),this.dir.x=-Math.sin(o),this.showWarningMessage()}}}]),c}()},{"../utils":9,"./creature":3}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.Game=void 0;var c=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw o}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),i=e("./creatures/hero"),o=e("./creatures/dummyEnemy"),a=e("./creatures/smartEnemy"),u=e("./controls"),h=e("./utils"),s=e("./creatures/bullet");function l(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}var f=document.querySelector(".score");r.Game=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.startTime=Date.now(),this.currentTime=Date.now(),this.canvas.width=700,this.canvas.height=700,this.ctx=this.canvas.getContext("2d"),this.hero=new i.Hero(this.ctx),this.dummyEnemies=[],this.smartEnemies=[],this.heroBullets=[],this.timers=[]}return n(t,[{key:"start",value:function(){var e=this,t=setInterval(function(){return e.initializeGame()},10),r=setInterval(function(){return e.addEnemy(e.dummyEnemies,o.DummyEnemy,o.BASE_DUMMY_SIZE)},4e3),n=setInterval(function(){return e.addEnemy(e.smartEnemies,a.SmartEnemy,a.BASE_SMART_SIZE)},6e3);this.timers.push(t,r,n),(0,u.addHeroControls)(this.hero,function(){return e.addBullet(e.heroBullets,s.Bullet)})}},{key:"initializeGame",value:function(){this.updateState(),this.updateScore()}},{key:"updateScore",value:function(){this.currentTime=this.currentTime+10;var e=(this.currentTime-this.startTime)/1e3;f.innerHTML=e}},{key:"updateState",value:function(){this.ctx.clearRect(0,0,this.ctx.canvas.clientWidth,this.ctx.canvas.clientHeight),this.hero.newPos().update(this.ctx),this.handleDummyEnemies(),this.handleSmartEnemies(),this.handleHeroBullets(),this.handleEnemiesDeath(),this.handleHeroDeath()}},{key:"handleDummyEnemies",value:function(){var t=this;this.dummyEnemies.forEach(function(e){return e.newPos().update(t.ctx)})}},{key:"handleSmartEnemies",value:function(){var i=this;this.smartEnemies=this.smartEnemies.reduce(function(e,t,r,n){return t.newPos(i.hero).update(i.ctx),e.some(function(e){return(0,h.ifCreaturesTouchEachOther)(e,t)})||(n.some(function(e){return(0,h.ifCreaturesTouchEachOther)(e,t)&&e!==t})&&(t.width*=1.5,t.height*=1.5),e.push(t)),e},[])}},{key:"handleHeroBullets",value:function(){var t=this,r=this.ctx.canvas.clientWidth,n=this.ctx.canvas.clientHeight,i=void 0;this.heroBullets=this.heroBullets.filter(function(e){return(i=e.x<r&&0<e.x&&e.y<n&&0<e.y)&&e.newPos().update(t.ctx),i})}},{key:"handleHeroDeath",value:function(){var t=this;[].concat(l(this.dummyEnemies),l(this.smartEnemies)).some(function(e){return(0,h.ifCreaturesTouchEachOther)(t.hero,e)})&&setTimeout(function(){t.timers.map(function(e){return clearInterval(e)}),alert("You lose")},5)}},{key:"handleEnemiesDeath",value:function(){var e=this,r=[],n=[],i=[],o=[].concat(l(this.smartEnemies),l(this.dummyEnemies));this.smartEnemies.forEach(function(t){e.heroBullets.some(function(e){return(0,h.ifCreaturesTouchEachOther)(t,e)})||r.push(t)}),this.dummyEnemies.forEach(function(t){e.heroBullets.some(function(e){return(0,h.ifCreaturesTouchEachOther)(t,e)})||n.push(t)}),this.heroBullets.forEach(function(t){o.some(function(e){return(0,h.ifCreaturesTouchEachOther)(e,t)})||i.push(t)}),this.smartEnemies=r,this.dummyEnemies=n,this.heroBullets=i}},{key:"addEnemy",value:function(e,t,r){var n=this.generateRandomPositionAndDirection(this.hero,r),i=n.size,o=n.x,a=n.y,u=n.alfaX,s=n.alfaY,c=new t(this.ctx,i,i,o,a,u,s);e.push(c)}},{key:"addBullet",value:function(e,t){var r=(0,h.getCenterCoordinates)(this.hero),n=c(r,2),i=n[0],o=n[1],a=this.hero,u=0===a.dir.x&&0===a.dir.y?a.gunDir:a.dir,s=new t(this.ctx,i,o,u.x,u.y);e.push(s)}},{key:"generateRandomPositionAndDirection",value:function(e,t){for(var r=void 0,n=void 0,i=10*Math.random()+t;r=Math.random()*this.ctx.canvas.clientWidth,n=Math.random()*this.ctx.canvas.clientHeight,(0,h.isDistanceBetweenCreaturesLowThanSearchable)(e,{x:r,y:n,width:i,height:i}););return{x:r,y:n,alfaX:2*Math.random()-1,alfaY:2*Math.random()-1,size:i}}}]),t}()},{"./controls":1,"./creatures/bullet":2,"./creatures/dummyEnemy":4,"./creatures/hero":5,"./creatures/smartEnemy":6,"./utils":9}],8:[function(e,t,r){"use strict";var n,i=e("./game-arena");n=document.querySelector("canvas"),new i.Game(n).start()},{"./game-arena":7}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var h=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw o}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function l(e){return[e.x+.5*e.width,e.y+.5*e.height]}function n(e,t){var r=l(e),n=h(r,2),i=n[0],o=n[1],a=l(t),u=h(a,2),s=u[0],c=u[1];return Math.pow(Math.pow(i-s,2)+Math.pow(o-c,2),.5)}r.getCenterCoordinates=l,r.getDistanceBetweenCreatures=n,r.ifCreaturesTouchEachOther=function(e,t){var r=l(e),n=h(r,2),i=n[0],o=n[1],a=l(t),u=h(a,2),s=u[0],c=u[1];return Math.abs(s-i)<(e.width+t.width-2)/2&&Math.abs(c-o)<(e.height+t.height-2)/2},r.isDistanceBetweenCreaturesLowThanSearchable=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:i;return n(e,t)<r};var i=200},{}]},{},[8]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
